name: CI

on:
  push:
    branches:
      - deployment/development
      - deployment/staging
      - deployment/production
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  pull-requests: write

jobs:
  initialize:
    name: Setup runner environment
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true))
    runs-on: picasodocs
    steps:
      - name: Set image name and tag
        id: vars
        run: |
          REPO="${{ github.repository }}"
          REPO_NAME="${{ github.event.repository.name }}"
          TARGET_BRANCH="${{ github.event.pull_request.base.ref || github.ref_name }}"
          BRANCH="${TARGET_BRANCH#deployment/}"
          SHA="${GITHUB_SHA::7}"
          IMAGE="ghcr.io/${REPO}:${BRANCH}-${SHA}"
          STACK_NAME="${REPO_NAME}-${BRANCH}"
          
          echo "IMAGE=$IMAGE" >> $GITHUB_OUTPUT
          echo "STACK_NAME=$STACK_NAME" >> $GITHUB_OUTPUT
    outputs:
      IMAGE: ${{ steps.vars.outputs.IMAGE }}
      STACK_NAME: ${{ steps.vars.outputs.STACK_NAME }}
    
  build:
    name: "Build image"
    runs-on: picasodocs
    needs: initialize

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ needs.initialize.outputs.IMAGE }}